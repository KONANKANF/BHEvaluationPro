package ci.bhci.bhevaluationpro.domain;import java.util.ArrayList;import java.util.List;import javax.persistence.CascadeType;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.EntityListeners;import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.Id;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.OneToMany;import javax.persistence.Table;import org.springframework.data.jpa.domain.support.AuditingEntityListener;import com.fasterxml.jackson.annotation.JsonIgnoreProperties;import lombok.AllArgsConstructor;import lombok.Getter;import lombok.NoArgsConstructor;import lombok.Setter;/** * Domain Departement *  * @author kyao * @since 2022-02-02 */@SuppressWarnings("serial")@Entity@Getter@Setter@AllArgsConstructor@NoArgsConstructor@Table(name = "t_service")@EntityListeners(AuditingEntityListener.class)@JsonIgnoreProperties(value = { "createdAt", "modifiedAt", "deletedAt" }, allowGetters = true)public class Departement extends AbstractBaseEntity {	@Id	@GeneratedValue(strategy = GenerationType.IDENTITY)	@Column(name = "id_service")	private Long id;	@ManyToOne(optional = true, fetch = FetchType.LAZY, cascade = CascadeType.ALL)	@JoinColumn(name = "id_direction")	private Direction direction;	@Column(name = "libelle_service")	private String libelleDepartement;	@OneToMany(mappedBy = "departement", orphanRemoval = true, fetch = FetchType.EAGER, cascade = CascadeType.ALL)	private List<Fonction> fonctions = new ArrayList<>();		public void addFonction(Fonction childEntity) {		this.fonctions.add(childEntity);			}}